var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.535,1,1.744]],["body/controllers/AppController.html",[0,2.303,1,2.617,2,2.029,3,0.53,4,0.454,5,0.383,6,2.742,7,0.611,8,2.303,9,4.134,10,1.41,11,0.044,12,1.002,13,3.361,14,1.786,15,1.292,16,0.683,17,0.892,18,2.26,19,2.742,20,0.53,21,0.133,22,2.742,23,1.786,24,1.41,25,3.361,26,0.033,27,0.033]],["title/modules/AppModule.html",[28,1.081,29,1.744]],["body/modules/AppModule.html",[1,2.43,2,2.076,3,0.378,4,0.324,5,0.273,11,0.044,16,0.821,17,0.635,18,2.285,19,1.953,20,0.378,21,0.095,26,0.026,27,0.026,28,1.507,29,3.262,30,1.005,31,1.62,32,1.953,33,1.953,34,1.953,35,2.654,36,2.285,37,2.285,38,2.076,39,1.446,40,1.446,41,2.395,42,2.076,43,2.076,44,1.663,45,1.272,46,2.395,47,2.395,48,1.953,49,1.953,50,3.439,51,2.395,52,2.395,53,1.953,54,2.395,55,2.395,56,2.395,57,2.395,58,2.395]],["title/injectables/AppService.html",[18,1.361,59,1.212]],["body/injectables/AppService.html",[3,0.564,4,0.483,5,0.407,7,0.65,8,2.396,9,4.229,11,0.043,12,1.066,14,1.9,15,1.344,16,0.564,17,0.949,18,2.124,20,0.564,21,0.142,24,1.5,26,0.034,27,0.034,59,1.891,60,2.159,61,2.917,62,3.576,63,3.576,64,3.576]],["title/controllers/AuthController.html",[0,1.535,65,2.006]],["body/controllers/AuthController.html",[0,1.44,2,1.637,3,0.427,4,0.366,5,0.309,7,0.493,8,1.994,10,1.137,11,0.044,12,0.808,14,1.44,16,0.769,17,0.719,20,0.427,21,0.108,22,2.211,24,1.137,26,0.028,27,0.028,65,2.606,66,2.211,67,2.711,68,2.711,69,2.593,70,2.711,71,2.682,72,2.711,73,2.288,74,2.711,75,1.44,76,1.44,77,0.996,78,1.44,79,2.606,80,2.711,81,3.753,82,1.277,83,2.711,84,2.711,85,3.062,86,2.028,87,2.211,88,3.062,89,2.211,90,2.211,91,2.711,92,2.711,93,2.711,94,2.711,95,2.711]],["title/modules/AuthModule.html",[28,1.081,35,1.535]],["body/modules/AuthModule.html",[3,0.445,4,0.381,5,0.322,11,0.043,16,0.781,17,0.749,20,0.445,21,0.112,26,0.029,27,0.029,28,1.445,30,1.184,31,1.818,35,3.008,37,2.408,38,2.33,39,1.704,40,1.704,42,2.33,43,2.33,44,2.68,45,1.5,48,2.302,86,2.408,87,2.302,96,2.302,97,2.822,98,2.302,99,2.302,100,2.822,101,2.68,102,2.822,103,1.96,104,2.822,105,2.822]],["title/injectables/AuthService.html",[59,1.212,86,1.361]],["body/injectables/AuthService.html",[3,0.296,4,0.254,5,0.214,7,0.341,8,1.525,11,0.044,12,1.039,14,0.997,15,0.856,16,0.728,17,0.498,20,0.296,21,0.074,24,0.787,26,0.022,27,0.022,45,0.997,59,1.204,60,1.133,69,2.074,71,2.074,73,0.997,75,1.525,76,1.525,77,0.925,78,1.525,79,1.993,85,1.531,86,1.352,88,2.341,89,1.531,90,1.531,103,1.303,106,1.531,107,0.959,108,3.619,109,3.485,110,3.485,111,2.104,112,1.733,113,1.877,114,2.09,115,3.485,116,3.904,117,3.205,118,2.87,119,2.87,120,1.877,121,1.877,122,1.303,123,2.843,124,1.531,125,1.877,126,2.87,127,1.877,128,2.54,129,1.638,130,1.877,131,1.462,132,1.877,133,0.959,134,2.104,135,1.877,136,1.303,137,2.341,138,1.852,139,2.87,140,2.87,141,2.87,142,1.877,143,1.877,144,2.341,145,1.877,146,1.877,147,1.877]],["title/classes/CreateUserDto.html",[21,0.115,148,1.744]],["body/classes/CreateUserDto.html",[3,0.435,4,0.373,5,0.314,7,0.501,10,1.823,11,0.043,12,1.296,15,1.513,16,0.599,20,0.435,21,0.151,23,2.857,26,0.029,27,0.029,77,1.153,82,1.3,107,1.27,129,1.823,131,1.823,148,2.294,149,1.3,150,3.82,151,2.251,152,2.309,153,2.251,154,2.759,155,2.759,156,2.759,157,2.759,158,2.759,159,3.545,160,2.638,161,2.759,162,2.759,163,1.916,164,2.827,165,2.759,166,2.759,167,2.759]],["title/interfaces/DatabaseConfig.html",[168,1.744,169,2.006]],["body/interfaces/DatabaseConfig.html",[3,0.347,4,0.297,5,0.25,7,0.399,11,0.044,15,1.584,16,0.71,17,0.583,20,0.347,24,0.922,26,0.025,27,0.025,45,1.168,77,1.249,107,1.08,111,1.327,117,2.661,128,2.314,131,1.889,133,0.735,134,1.327,138,1.168,168,1.327,169,2.244,170,2.198,171,1.526,172,3.672,173,4.156,174,3.672,175,3.672,176,3.672,177,3.832,178,2.636,179,2.938,180,1.327,181,2.198,182,1.327,183,1.793,184,1.793,185,1.793,186,1.793,187,1.793,188,1.793,189,1.793,190,1.793,191,1.793,192,1.793,193,1.793,194,1.793,195,1.793,196,1.793,197,1.526,198,1.526]],["title/modules/DatabaseModule.html",[28,1.081,36,1.361]],["body/modules/DatabaseModule.html",[3,0.57,4,0.489,5,0.412,11,0.043,16,0.783,17,0.96,20,0.57,21,0.144,26,0.034,27,0.034,28,1.7,30,1.518,36,2.14,42,2.184,43,2.184,44,3.154,45,1.922,101,2.512,182,2.997,199,3.618,200,3.618]],["title/classes/User.html",[21,0.115,133,0.965]],["body/classes/User.html",[3,0.347,4,0.297,5,0.25,7,0.399,10,1.975,11,0.043,12,1.403,15,1.488,16,0.347,20,0.347,21,0.087,26,0.025,27,0.025,77,1.325,107,1.08,129,1.608,131,1.608,133,1.08,136,2.661,149,1.036,152,2.036,160,2.244,179,1.327,180,1.327,197,2.244,201,1.793,202,2.636,203,3.832,204,4.502,205,2.314,206,4.502,207,4.225,208,2.198,209,3.232,210,2.198,211,2.198,212,2.198,213,3.232,214,3.232,215,3.232,216,2.198,217,2.198,218,4.992,219,2.198,220,2.198,221,3.232,222,2.198,223,2.636,224,3.232,225,2.198,226,2.198,227,2.198,228,2.198,229,2.198,230,2.198,231,2.198,232,2.198,233,3.232]],["title/classes/UserDto.html",[21,0.115,234,1.535]],["body/classes/UserDto.html",[3,0.42,4,0.36,5,0.303,7,0.484,10,1.789,11,0.044,12,1.375,15,1.497,16,0.585,20,0.42,21,0.106,23,2.668,26,0.028,27,0.028,75,1.415,76,1.415,77,1.224,78,1.415,82,1.255,107,1.239,112,1.608,129,1.789,133,1.621,149,1.255,152,2.267,164,3.11,205,2.575,234,1.97,235,2.173,236,3.025,237,3.708,238,2.664,239,2.664,240,1.85,241,2.664,242,2.664,243,2.664,244,2.173,245,2.664,246,2.173]],["title/classes/UserLoginRequestDto.html",[21,0.115,71,1.535]],["body/classes/UserLoginRequestDto.html",[3,0.478,4,0.41,5,0.345,7,0.551,10,1.699,11,0.043,12,1.207,15,1.451,16,0.639,20,0.478,21,0.161,23,2.773,26,0.031,27,0.031,69,2.423,71,2.152,77,1.074,82,1.428,107,1.353,129,1.913,131,1.913,149,1.428,153,2.472,159,3.303,160,2.812,163,2.104,164,2.753,247,3.167,248,2.472,249,3.03,250,3.03,251,3.03]],["title/classes/UserLoginResponseDto.html",[21,0.115,73,1.535]],["body/classes/UserLoginResponseDto.html",[3,0.379,4,0.325,5,0.274,7,0.437,10,1.848,11,0.043,12,1.391,15,1.526,16,0.636,20,0.379,21,0.095,23,2.341,26,0.026,27,0.026,69,2.143,73,1.833,75,1.277,76,1.277,77,1.238,78,1.277,82,1.133,107,1.153,112,1.451,129,1.447,133,1.559,144,4.08,149,1.133,152,1.833,164,2.932,202,2.813,205,2.082,234,2.58,236,2.813,240,1.669,247,2.8,252,1.961,253,3.449,254,2.404,255,4.033,256,2.404,257,2.404,258,2.404,259,1.961,260,2.404,261,2.404]],["title/modules/UsersModule.html",[28,1.081,37,1.361]],["body/modules/UsersModule.html",[3,0.458,4,0.392,5,0.331,11,0.043,16,0.754,17,0.77,20,0.458,21,0.115,26,0.03,27,0.03,28,1.472,30,1.217,31,1.853,36,2.428,37,2.56,38,2.375,39,1.752,40,1.752,42,2.375,43,2.375,49,2.367,101,2.731,114,2.632,262,2.367,263,2.902,264,2.367,265,2.367,266,2.902,267,2.731,268,2.902,269,2.902]],["title/injectables/UsersService.html",[59,1.212,114,1.361]],["body/injectables/UsersService.html",[3,0.305,4,0.262,5,0.221,7,0.352,8,1.562,11,0.044,12,1.183,14,1.888,15,1.339,16,0.673,17,0.514,20,0.305,21,0.077,24,1.49,26,0.022,27,0.022,59,1.233,60,1.169,75,2.108,76,2.108,77,0.943,78,2.108,79,3.118,108,1.579,111,2.972,112,1.774,114,1.385,122,2.041,123,2.397,124,1.579,128,2.145,129,1.49,131,0.812,133,1.501,134,2.395,136,1.344,137,1.579,138,1.562,148,2.395,152,1.029,198,1.344,205,1.774,234,1.029,240,1.344,244,1.579,246,1.579,259,1.579,270,1.579,271,2.397,272,2.939,273,2.939,274,1.936,275,1.936,276,2.939,277,2.939,278,1.936,279,2.939,280,1.936,281,2.939,282,1.936,283,1.936,284,1.936,285,1.936,286,1.936,287,1.936,288,1.936,289,1.936,290,1.936,291,1.936,292,1.936,293,2.939,294,1.936,295,1.936,296,2.939,297,1.936]],["title/coverage.html",[298,2.722]],["body/coverage.html",[0,1.947,1,1.581,5,0.298,6,2.136,11,0.043,18,1.234,21,0.191,26,0.028,27,0.028,59,1.773,61,2.136,65,1.818,66,2.136,69,1.947,71,1.391,73,1.391,77,0.695,86,1.234,106,2.136,114,1.234,133,0.875,138,1.391,148,1.581,150,2.136,151,2.136,168,1.581,169,1.818,171,2.544,182,1.581,201,2.136,223,2.136,234,1.391,235,2.136,247,2.544,248,2.136,252,2.136,267,1.818,270,2.136,298,1.818,299,2.618,300,2.618,301,2.618,302,5.571,303,4.227,304,3.664,305,3.664,306,3.664,307,4.227,308,2.136,309,2.618,310,2.136,311,2.618,312,2.618,313,3.664,314,2.136,315,2.618]],["title/dependencies.html",[31,1.634,316,1.976]],["body/dependencies.html",[11,0.044,17,0.864,21,0.168,26,0.032,27,0.032,31,1.533,53,2.655,82,1.533,103,2.26,122,2.26,163,2.26,179,2.563,180,1.965,317,3.255,318,3.255,319,4.723,320,3.255,321,4.244,322,3.255,323,3.255,324,3.255,325,3.255,326,3.255,327,3.255,328,3.255,329,3.255,330,3.255,331,3.255,332,3.255,333,3.255,334,3.255,335,3.255,336,3.255,337,3.255,338,3.255]],["title/miscellaneous/functions.html",[339,1.463,340,2.829]],["body/miscellaneous/functions.html",[7,0.771,11,0.038,26,0.038,27,0.038,308,3.459,310,4.341,339,2.56,340,3.459,341,4.24]],["title/index.html",[7,0.44,342,2.423,343,2.423]],["body/index.html",[4,0.349,5,0.295,11,0.042,26,0.028,27,0.028,180,1.561,271,2.109,298,1.795,344,2.585,345,2.585,346,3.632,347,2.585,348,2.585,349,2.585,350,2.585,351,2.585,352,2.585,353,2.109,354,4.198,355,2.585,356,2.585,357,2.585,358,5.108,359,2.585,360,2.585,361,2.585,362,3.632,363,2.585,364,2.585,365,2.585,366,2.585,367,2.585,368,2.585,369,4.973,370,2.585,371,2.585,372,3.632,373,2.585,374,2.585,375,2.585,376,2.585,377,3.632,378,3.632,379,2.585,380,2.585,381,2.585,382,3.632,383,3.632,384,2.585,385,2.585,386,2.585,387,2.585,388,2.109,389,2.585,390,2.585,391,2.585,392,2.585,393,2.585,394,2.585,395,2.585,396,2.585,397,2.585,398,2.585,399,2.109,400,2.585,401,2.585,402,2.585,403,2.585,404,2.585,405,2.585,406,2.109]],["title/modules.html",[30,1.645]],["body/modules.html",[11,0.036,26,0.036,27,0.036,29,2.365,30,1.643,35,2.081,36,1.845,37,1.845,388,4.196,407,5.144,408,5.144,409,5.354,410,3.917,411,3.917]],["title/overview.html",[412,3.198]],["body/overview.html",[2,1.681,11,0.042,18,2.057,26,0.029,27,0.029,29,3.291,30,1.168,31,1.801,32,2.271,33,2.271,34,2.271,35,2.949,36,2.214,37,2.538,38,2.308,39,1.681,40,1.681,60,1.681,86,2.057,96,2.271,98,2.271,99,2.271,114,2.456,149,1.312,168,1.681,262,2.271,264,2.271,265,2.271,412,2.271,413,2.784,414,2.784,415,2.784,416,2.784,417,2.784]],["title/properties.html",[107,1.159,316,1.976]],["body/properties.html",[11,0.043,26,0.038,27,0.038,107,1.389,353,3.389,399,3.389,406,3.389,418,4.154,419,4.154,420,4.154]],["title/miscellaneous/variables.html",[339,1.463,421,2.829]],["body/miscellaneous/variables.html",[7,0.525,11,0.044,24,1.212,26,0.03,27,0.03,77,1.04,111,1.744,117,2.722,128,2.367,131,1.212,133,0.965,134,1.744,138,1.535,171,2.006,172,2.356,173,2.356,174,2.356,175,2.356,176,2.356,178,2.356,179,2.882,182,2.367,183,3.198,184,2.356,185,2.356,186,2.356,187,2.356,188,2.356,189,2.356,190,2.356,191,2.356,192,2.356,193,2.356,194,2.356,195,2.356,196,2.356,197,2.006,198,2.006,267,2.722,314,2.356,339,1.744,421,2.356,422,2.888,423,2.888,424,3.92,425,3.92,426,2.888,427,2.888]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":302,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":419,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":417,"title":{},"body":{"overview.html":{}}}],["10",{"_index":295,"title":{},"body":{"injectables/UsersService.html":{}}}],["10.0.1",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":414,"title":{},"body":{"overview.html":{}}}],["2.1.5",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":415,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":413,"title":{},"body":{"overview.html":{}}}],["5",{"_index":416,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["6.28.0",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["6.6.1",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["alter",{"_index":196,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":389,"title":{},"body":{"index.html":{}}}],["api/v1",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["apiokresponse",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":164,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{}}}],["apiproperty()@isemail",{"_index":153,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserLoginRequestDto.html":{}}}],["apiproperty()@isstring",{"_index":250,"title":{},"body":{"classes/UserLoginRequestDto.html":{}}}],["apiproperty()@isstring()@maxlength(20",{"_index":155,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isstring()@minlength(6)@maxlength(30",{"_index":157,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":367,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":352,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":65,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":399,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":86,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":411,"title":{},"body":{"modules.html":{}}}],["await",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":390,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.hash(user.password",{"_index":294,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["body.email",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.password",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":310,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":409,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":407,"title":{},"body":{"modules.html":{}}}],["building",{"_index":347,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":149,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":262,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":264,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":263,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":265,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":218,"title":{},"body":{"classes/User.html":{}}}],["column({type",{"_index":213,"title":{},"body":{"classes/User.html":{}}}],["compare",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(password",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":186,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config.database",{"_index":193,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config.dialect",{"_index":188,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config.host",{"_index":189,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config.password",{"_index":192,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config.port",{"_index":190,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config.username",{"_index":191,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["configserice",{"_index":185,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["configserice.get('database",{"_index":187,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["constructor(user",{"_index":236,"title":{},"body":{"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{}}}],["constructor(usersrepository",{"_index":274,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"overview.html":{}}}],["coverage",{"_index":298,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":271,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["create(user",{"_index":277,"title":{},"body":{"injectables/UsersService.html":{}}}],["created_at",{"_index":209,"title":{},"body":{"classes/User.html":{}}}],["createdat",{"_index":204,"title":{},"body":{"classes/User.html":{}}}],["createdat()@column({field",{"_index":208,"title":{},"body":{"classes/User.html":{}}}],["createuserdto",{"_index":148,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["database",{"_index":172,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["database.providers",{"_index":200,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["database_host=\"host",{"_index":365,"title":{},"body":{"index.html":{}}}],["database_password=\"password",{"_index":364,"title":{},"body":{"index.html":{}}}],["database_port=portrunning",{"_index":366,"title":{},"body":{"index.html":{}}}],["database_user=\"user",{"_index":363,"title":{},"body":{"index.html":{}}}],["databaseconfig",{"_index":169,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["databasemodule",{"_index":36,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":182,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datatype",{"_index":225,"title":{},"body":{"classes/User.html":{}}}],["datatype.string(20",{"_index":232,"title":{},"body":{"classes/User.html":{}}}],["datatype.uuid",{"_index":230,"title":{},"body":{"classes/User.html":{}}}],["datatype.uuidv4",{"_index":231,"title":{},"body":{"classes/User.html":{}}}],["date",{"_index":207,"title":{},"body":{"classes/User.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{}}}],["default",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":214,"title":{},"body":{"classes/User.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["deletedat",{"_index":226,"title":{},"body":{"classes/User.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":353,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":368,"title":{},"body":{"index.html":{}}}],["dialect",{"_index":173,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":284,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/user.dto",{"_index":283,"title":{},"body":{"injectables/UsersService.html":{}}}],["e2e",{"_index":379,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":348,"title":{},"body":{"index.html":{}}}],["email",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["env",{"_index":360,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":202,"title":{},"body":{"classes/User.html":{},"classes/UserLoginResponseDto.html":{}}}],["fastify",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["field",{"_index":233,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{}}}],["found",{"_index":289,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":346,"title":{},"body":{"index.html":{}}}],["function",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":340,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":342,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":272,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyemail(email",{"_index":279,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid",{"_index":273,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(id",{"_index":281,"title":{},"body":{"injectables/UsersService.html":{}}}],["given",{"_index":288,"title":{},"body":{"injectables/UsersService.html":{}}}],["graph",{"_index":410,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":385,"title":{},"body":{"index.html":{}}}],["hash",{"_index":293,"title":{},"body":{"injectables/UsersService.html":{}}}],["hasone",{"_index":227,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":63,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":396,"title":{},"body":{"index.html":{}}}],["host",{"_index":174,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["httpcode",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":403,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["httpstatus.bad_request",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":290,"title":{},"body":{"injectables/UsersService.html":{}}}],["id",{"_index":205,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":255,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["inject",{"_index":198,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inject('users_repository",{"_index":285,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":59,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":357,"title":{},"body":{"index.html":{}}}],["installconfiguration",{"_index":359,"title":{},"body":{"index.html":{}}}],["interface",{"_index":168,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":170,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["invalid",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":160,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserLoginRequestDto.html":{}}}],["ismatch",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":159,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserLoginRequestDto.html":{}}}],["join",{"_index":392,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_key",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register({secret",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":400,"title":{},"body":{"index.html":{}}}],["license",{"_index":406,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":383,"title":{},"body":{"index.html":{}}}],["load",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"coverage.html":{}}}],["login(body",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(userloginrequestdto",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":162,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(20",{"_index":167,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(30",{"_index":166,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":161,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":165,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":339,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":382,"title":{},"body":{"index.html":{}}}],["mode",{"_index":372,"title":{},"body":{"index.html":{}}}],["model",{"_index":203,"title":{},"body":{"classes/User.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":395,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":401,"title":{},"body":{"index.html":{}}}],["name",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":354,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":405,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{}}}],["nestjs/core",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"dependencies.html":{}}}],["new",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":152,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["node.js",{"_index":345,"title":{},"body":{"index.html":{}}}],["npm",{"_index":358,"title":{},"body":{"index.html":{}}}],["number",{"_index":177,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["open",{"_index":384,"title":{},"body":{"index.html":{}}}],["optional",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":412,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":316,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"classes/UserLoginRequestDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":393,"title":{},"body":{"index.html":{}}}],["port",{"_index":175,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(200)@apiokresponse({type",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["primarykey",{"_index":215,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":374,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":344,"title":{},"body":{"index.html":{}}}],["project",{"_index":362,"title":{},"body":{"index.html":{}}}],["promise",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":107,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"properties.html":{}}}],["provide",{"_index":183,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":178,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["read",{"_index":394,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{}}}],["reflect",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":356,"title":{},"body":{"index.html":{}}}],["request",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["request.ts",{"_index":248,"title":{},"body":{"classes/UserLoginRequestDto.html":{},"coverage.html":{}}}],["request.ts:11",{"_index":251,"title":{},"body":{"classes/UserLoginRequestDto.html":{}}}],["request.ts:7",{"_index":249,"title":{},"body":{"classes/UserLoginRequestDto.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.ts",{"_index":252,"title":{},"body":{"classes/UserLoginResponseDto.html":{},"coverage.html":{}}}],["response.ts:7",{"_index":253,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["root",{"_index":361,"title":{},"body":{"index.html":{}}}],["routermodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.register",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":369,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":349,"title":{},"body":{"index.html":{}}}],["secret",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["sequelize",{"_index":179,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sequelize.addmodels([user",{"_index":194,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["sequelize.sync",{"_index":195,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":350,"title":{},"body":{"index.html":{}}}],["side",{"_index":351,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":387,"title":{},"body":{"index.html":{}}}],["src/.../database.providers.ts",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../users.providers.ts",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/database/database.module.ts",{"_index":199,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":171,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":150,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":247,"title":{},"body":{"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts",{"_index":235,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts:12",{"_index":237,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:6",{"_index":239,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:9",{"_index":238,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/user.entity.ts",{"_index":201,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:21",{"_index":216,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:26",{"_index":212,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:29",{"_index":219,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:32",{"_index":217,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:36",{"_index":210,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.entity.ts:40",{"_index":222,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.module.ts",{"_index":266,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.providers.ts",{"_index":314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":270,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":275,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":282,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":280,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":278,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":370,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":373,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":375,"title":{},"body":{"index.html":{}}}],["started",{"_index":343,"title":{"index.html":{}},"body":{}}],["starter",{"_index":355,"title":{},"body":{"index.html":{}}}],["statements",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":397,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["super(user",{"_index":260,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["supersecret",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["support",{"_index":388,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":408,"title":{},"body":{"modules.html":{}}}],["table",{"_index":223,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["tablename",{"_index":228,"title":{},"body":{"classes/User.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":378,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":381,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":380,"title":{},"body":{"index.html":{}}}],["tests",{"_index":377,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":386,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(userloginrequestdto",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('jwtkey",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.email",{"_index":243,"title":{},"body":{"classes/UserDto.html":{}}}],["this.id",{"_index":241,"title":{},"body":{"classes/UserDto.html":{}}}],["this.jwt.signasync",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwt_key",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.nickname",{"_index":245,"title":{},"body":{"classes/UserDto.html":{}}}],["this.token",{"_index":261,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["this.usersrepository.create",{"_index":297,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findbypk(id",{"_index":287,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":292,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.getuserbyemail(body.email",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["token",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserLoginResponseDto.html":{}}}],["touch",{"_index":398,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":197,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":404,"title":{},"body":{"index.html":{}}}],["type",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginRequestDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":286,"title":{},"body":{"injectables/UsersService.html":{}}}],["typescript",{"_index":180,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["unique",{"_index":224,"title":{},"body":{"classes/User.html":{}}}],["unique()@isemail()@column",{"_index":211,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":376,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":420,"title":{},"body":{"properties.html":{}}}],["updated_at",{"_index":221,"title":{},"body":{"classes/User.html":{}}}],["updatedat",{"_index":206,"title":{},"body":{"classes/User.html":{}}}],["updatedat()@column({field",{"_index":220,"title":{},"body":{"classes/User.html":{}}}],["usefactory",{"_index":184,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":133,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/DatabaseConfig.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":259,"title":{},"body":{"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":151,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":158,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":156,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":154,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":244,"title":{},"body":{"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["user.entity",{"_index":240,"title":{},"body":{"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":242,"title":{},"body":{"classes/UserDto.html":{}}}],["user.nickname",{"_index":246,"title":{},"body":{"classes/UserDto.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":296,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto",{"_index":234,"title":{"classes/UserDto.html":{}},"body":{"classes/UserDto.html":{},"classes/UserLoginResponseDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userdto(user",{"_index":291,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdto:12",{"_index":258,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["userdto:6",{"_index":257,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["userdto:9",{"_index":256,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["userloginrequestdto",{"_index":71,"title":{"classes/UserLoginRequestDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginRequestDto.html":{},"coverage.html":{}}}],["userloginresponsedto",{"_index":73,"title":{"classes/UserLoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserLoginResponseDto.html":{},"coverage.html":{}}}],["userloginresponsedto(user",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":176,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":229,"title":{},"body":{"classes/User.html":{}}}],["users.providers",{"_index":268,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":269,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/dto/user",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/user.entity",{"_index":181,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["users/users.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["users_repository",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usersmodule",{"_index":37,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":267,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersrepository",{"_index":276,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":114,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":163,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UserLoginRequestDto.html":{},"dependencies.html":{}}}],["value",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":421,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":418,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":371,"title":{},"body":{"index.html":{}}}],["website",{"_index":402,"title":{},"body":{"index.html":{}}}],["world",{"_index":64,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":254,"title":{},"body":{"classes/UserLoginResponseDto.html":{}}}],["you'd",{"_index":391,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\nimport { AppService } from './app.service';\nimport { AppController } from './app.controller';\n\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { DatabaseModule } from './database/database.module';\nimport configuration from './config/configuration';\nimport { RouterModule } from '@nestjs/core';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ load: [configuration] }),\n    DatabaseModule,\n    UsersModule,\n    AuthModule,\n    RouterModule.register([\n      {\n        path: \"api/v1\",\n        module: AuthModule\n      }\n    ])\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userLoginRequestDto: UserLoginRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(200)@ApiOkResponse({type: UserLoginResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userLoginRequestDto\n                                    \n                                                UserLoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags, ApiOkResponse } from '@nestjs/swagger';\nimport { Controller, Post, HttpCode, Body } from '@nestjs/common';\n\nimport { AuthService } from './auth.service';\nimport { UserLoginResponseDto} from '../users/dto/user-login-response';\nimport { UserLoginRequestDto } from '../users/dto/user-login-request';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('login')\n  @HttpCode(200)\n  @ApiOkResponse({ type: UserLoginResponseDto })\n  login(\n      @Body() userLoginRequestDto: UserLoginRequestDto,\n  ): Promise {\n      return this.authService.login(userLoginRequestDto);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nAuthModule->AuthModule \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { ConfigModule} from '@nestjs/config';\n\n@Module({\n  imports: [UsersModule, JwtModule.register({secret: \"superSecret\"}), ConfigModule],\n  providers: [AuthService],\n  exports: [AuthModule]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                JWT_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwt: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body: UserLoginRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                UserLoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        JWT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { compare } from 'bcrypt';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\nimport { UsersService } from '../users/users.service';\nimport { UserLoginRequestDto } from '../users/dto/user-login-request';\nimport { UserLoginResponseDto } from '../users/dto/user-login-response';\n\n@Injectable()\nexport class AuthService {\n  private JWT_KEY: string;\n\n  constructor(\n    private usersService: UsersService,\n    private jwt: JwtService,\n    private configService: ConfigService,\n  ) {\n    this.JWT_KEY = this.configService.get('jwtKey');\n  }\n\n  public async login(body: UserLoginRequestDto): Promise {\n    const email = body.email;\n    const password = body.password;\n\n    const user = await this.usersService.getUserByEmail(body.email);\n\n    if (user === undefined) {\n      throw new HttpException(\n        'Invalid email or password.',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n\n    const isMatch = await compare(password, user.password);\n    if (!isMatch) {\n      throw new HttpException(\n        'Invalid email or password.',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n\n    const token = await this.jwt.signAsync({ email }, { secret: this.JWT_KEY });\n\n    return new UserLoginResponseDto(user, token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                nickname\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(6)@MaxLength(30)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEmail, MinLength, MaxLength } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  readonly email: string;\n\n  @ApiProperty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(30)\n  readonly password: string;\n\n  @ApiProperty()\n  @IsString()\n  @MaxLength(20)\n  readonly nickname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/database.providers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                                \n                                        \n                                            dialect\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dialect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dialect:     Dialect\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Dialect\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Provider } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { Dialect } from 'sequelize';\nimport { Sequelize } from 'sequelize-typescript';\n\nimport { User } from '../users/user.entity';\n\ninterface DatabaseConfig {\n  host: string;\n  database: string;\n  port: number;\n  username: string;\n  password: string;\n  dialect: Dialect;\n}\n\nexport const databaseProviders: Provider[] = [\n  {\n    provide: 'SEQUELIZE',\n    useFactory: async (configSerice: ConfigService) => {\n      const config = configSerice.get('database');\n      const sequelize = new Sequelize({\n        dialect: config.dialect,\n        host: config.host,\n        port: config.port,\n        username: config.username,\n        password: config.password,\n        database: config.database,\n      });\n      sequelize.addModels([User]);\n      await sequelize.sync({ alter: true });\n      return sequelize;\n    },\n    inject: [ConfigService],\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  imports: [ConfigModule],\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Model\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreatedAt()@Column({field: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Unique()@IsEmail()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined, defaultValue: undefined, primaryKey: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdatedAt()@Column({field: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Table,\n  Column,\n  Model,\n  Unique,\n  IsEmail,\n  DataType,\n  CreatedAt,\n  UpdatedAt,\n  DeletedAt,\n  HasOne,\n} from 'sequelize-typescript';\n\n@Table({ tableName: 'users' })\nexport class User extends Model {\n  @Column({\n    type: DataType.UUID,\n    defaultValue: DataType.UUIDV4,\n    primaryKey: true,\n  })\n  id: string;\n\n  @Unique\n  @IsEmail\n  @Column\n  email: string;\n\n  @Column\n  password: string;\n\n  @Column({ type: DataType.STRING(20) })\n  nickname: string;\n\n  @CreatedAt\n  @Column({ field: 'created_at' })\n  createdAt: Date;\n\n  @UpdatedAt\n  @Column({ field: 'updated_at' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                nickname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/user.dto.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './../user.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDto {\n  @ApiProperty()\n  id: string;\n\n  @ApiProperty()\n  readonly email: string;\n\n  @ApiProperty()\n  readonly nickname: string;\n\n  constructor(user: User) {\n    this.id = user.id;\n    this.email = user.email;\n    this.nickname = user.nickname;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginRequestDto.html":{"url":"classes/UserLoginRequestDto.html","title":"class - UserLoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-login-request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-login-request.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-login-request.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString } from 'class-validator';\n\nexport class UserLoginRequestDto {\n  @ApiProperty()\n  @IsEmail()\n  readonly email: string;\n\n  @ApiProperty()\n  @IsString()\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginResponseDto.html":{"url":"classes/UserLoginResponseDto.html","title":"class - UserLoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-login-response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                nickname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User, token?: string)\n                    \n                \n                        \n                            \n                                Defined in src/users/dto/user-login-response.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user-login-response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDto:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UserDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDto } from './user.dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { User } from '../user.entity';\n\nexport class UserLoginResponseDto extends UserDto {\n  @ApiProperty()\n  token: string;\n\n  constructor(user: User, token?: string) {\n    super(user);\n    this.token = token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { usersProviders } from './users.providers';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [UsersService, ...usersProviders],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\nimport { Injectable, Inject, HttpException, HttpStatus } from '@nestjs/common';\n\nimport { UserDto } from './dto/user.dto';\nimport { CreateUserDto } from './dto/create-user.dto';\n\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject('USERS_REPOSITORY')\n    private usersRepository: typeof User,\n  ) {}\n\n  async getUserById(id: string): Promise {\n    const user = await this.usersRepository.findByPk(id);\n\n    if (user === undefined) {\n      throw new HttpException(\n        'User with given id not found.',\n        HttpStatus.NOT_FOUND,\n      );\n    }\n    return new UserDto(user);\n  }\n\n  async getUserByEmail(email: string): Promise {\n    return await this.usersRepository.findOne({ where: { email } });\n  }\n\n  async create(user: CreateUserDto): Promise {\n    const hash = await bcrypt.hash(user.password, 10);\n    const userData = await this.usersRepository.create({\n      email: user.email,\n      password: hash,\n      nickname: user.nickname,\n    });\n    return userData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/user-login-request.ts\n            \n            class\n            UserLoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/user-login-response.ts\n            \n            class\n            UserLoginResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.providers.ts\n            \n            variable\n            usersProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @fastify/static : ^6.6.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.2.1\n        \n            @nestjs/swagger : ^6.1.4\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mysql2 : ^3.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sequelize : ^6.28.0\n        \n            sequelize-typescript : ^2.1.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installConfiguration\nCreate a .env file in the root of your project:\nDATABASE_USER=\"user\"\nDATABASE_PASSWORD=\"password\"\nDATABASE_HOST=\"host\"\nDATABASE_PORT=portRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nAuthModule->AuthModule \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            usersProviders   (src/.../users.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'SEQUELIZE',\n    useFactory: async (configSerice: ConfigService) => {\n      const config = configSerice.get('database');\n      const sequelize = new Sequelize({\n        dialect: config.dialect,\n        host: config.host,\n        port: config.port,\n        username: config.username,\n        password: config.password,\n        database: config.database,\n      });\n      sequelize.addModels([User]);\n      await sequelize.sync({ alter: true });\n      return sequelize;\n    },\n    inject: [ConfigService],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/users/users.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'USERS_REPOSITORY',\n    useValue: User,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
